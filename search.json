[{"path":"https://github.com/waldronlab/curatedMetagenomicAnalyses/articles/Age_metaanalysis_vignette.html","id":"meta-analysis-of-age-related-microbial-species-using-data-from-curatedmetagenomicdata","dir":"Articles","previous_headings":"","what":"Meta-analysis of age-related microbial species using data from curatedMetagenomicData","title":"Meta-analysis of age-related microbial species using cMD3.0","text":"","code":"library(curatedMetagenomicData) library(tidyverse) library(SummarizedExperiment) library(TreeSummarizedExperiment)"},{"path":"https://github.com/waldronlab/curatedMetagenomicAnalyses/articles/Age_metaanalysis_vignette.html","id":"retrieval-of-datasets-from-the-cmd3-meeting-a-series-of-requirements","dir":"Articles","previous_headings":"Meta-analysis of age-related microbial species using data from curatedMetagenomicData","what":"Retrieval of datasets from the cMD3 meeting a series of requirements","title":"Meta-analysis of age-related microbial species using cMD3.0","text":"","code":"#Filter on Age, body_site, study_condition and remove samples missing BMI   metadata <- curatedMetagenomicData::sampleMetadata  %>%      filter(age >= 16 &            body_site == \"stool\" &            study_condition == \"control\" &             is.na(BMI) != TRUE &            is.na(gender) != TRUE &            days_from_first_collection %in% c(0,NA) &            !study_name == \"ThomasAM_2019_c\")     metadata <- metadata %>%    group_by(study_name, subject_id) %>%    filter(row_number() == 1) %>%    ungroup()      #Apply function to grouped selected dataset   datasets_tokeep <- metadata %>%     select(study_name, gender,BMI, age) %>%     group_by(study_name) %>%      summarise(N=n(),age_IQR=IQR(age),bmi_IQR=IQR(BMI)) %>%       mutate(keep=(N >= 40) & (age_IQR >= 15)) %>%      filter(keep == TRUE)      datasets_tokeep <- datasets_tokeep$study_name      metadata <- metadata %>%      filter(study_name %in% datasets_tokeep)"},{"path":"https://github.com/waldronlab/curatedMetagenomicAnalyses/articles/Age_metaanalysis_vignette.html","id":"download-of-datasets-and-data-wrangling-to-structure-them-in-a-format-suitable-for-this-meta-analysis","dir":"Articles","previous_headings":"Meta-analysis of age-related microbial species using data from curatedMetagenomicData","what":"Download of datasets and data wrangling to structure them in a format suitable for this meta-analysis","title":"Meta-analysis of age-related microbial species using cMD3.0","text":"Now filtered metadata, apply cMD function “returnSamples()”. function allows us obtain TreeSummarizedExperiment object, stored specified data-type (example: relative abundances species) samples selected metadata. proceeding, split datasets country: analysis, AsnicarF_2021 dataset encompasses samples 2 countries, divide GBR- USA-samples (renaming last: USA_asnicar_2021). TreeSummarizedExperiment object taxonomic relative abundances stores entire taxonomy (Kingdom species-level) microbial species. therefore use function splitByRanks mia package allows us select higher taxonomic level. focus Species. interested species , modify TSE object accordingly","code":"#Retrieve queried samples tse <- curatedMetagenomicData::returnSamples(metadata, dataType = \"relative_abundance\")  #Separating Asnicar USA from Asnicar GBR colData(tse)[which(colData(tse)$study_name == \"AsnicarF_2021\" & colData(tse)$country == \"USA\"),]$study_name <- \"USA_asnicarF_2021\" library(mia) species_tse <- splitByRanks(tse, rank = \"species\")[[1]]"},{"path":[]},{"path":"https://github.com/waldronlab/curatedMetagenomicAnalyses/articles/Age_metaanalysis_vignette.html","id":"defining-functions-used-to-perform-the-meta-analysis","dir":"Articles","previous_headings":"Analysis of microbial species by a linear model and computation of an effect size for each species in each dataset","what":"Defining functions used to perform the meta-analysis","title":"Meta-analysis of age-related microbial species using cMD3.0","text":"functions used compute correlation (R) t-value linear models transform relative abundance data. function used transform species relative abundances according arcsin(RelAb100)arcsin(\\sqrt{\\frac{RelAb}{100}}) function correct compositionality-related issues order proceed meta-analysis, compute effect-size population. dataset effect-size computed function define . function estimates per-feature relationship age arcsin-square-root relative abundance species. estimates extracted Ordinary Least Squares (OLS) model, microbial feature (case, species) response, age subject predictor. Using method can control model age & gender patient. model indeed shape: species∼sex+age+BMI species \\sim  sex + age + BMI compute effect-size “age” respect “species” (corrected “gender” & “BMI”) via formula: effect-size=tt2+(n−1)\\text{effect-size} = \\frac{t}{\\sqrt{t^2 + (n-1)}} : nn number samples considered dataset tt T-statistics age returned software Now computed effect-sizes population, can meta-analyze microbial feature. order , define function applying metacor function package metafor.","code":"#Compute Correlation (R) from t-value R_fromlm <- function(n,t) {   r <- t / sqrt((t^2) + (n - 1))   return(r) } #Transform relative abundances asin_trans <- function(rel_ab){   return(asin(sqrt(rel_ab/100))) } computeStandardizedMeanDifference <- function(tse_object){      tse_datasets <- unique(colData(tse_object)$study_name)      #Build linear models for all species of each dataset present in tse_object   singleDatasetAnalyze <- function(dataset) {          single_dataset_tse <- tse_object[,tse_object$study_name == dataset]      #Select vectors of relative abundances and metadata     exprs_df <- asin_trans(       assay(single_dataset_tse))          exprs_df <- exprs_df[rowSums(is.na(exprs_df)) != ncol(exprs_df), ]      species <- rownames(exprs_df)          age <- as.double(colData(single_dataset_tse)$age)     bmi <- as.double(colData(single_dataset_tse)$BMI)     gender <- as.factor(colData(single_dataset_tse)$gender)          compute_lm <- function(exprs_row){         if(nlevels(gender) >1){           lm_res <-  broom::tidy(lm(exprs_row ~ bmi + age + gender))         } else {           lm_res <-  broom::tidy(lm(exprs_row ~ bmi + age))     }        lm_res <- column_to_rownames(lm_res, var = \"term\")       res <- lm_res[\"age\",c(\"statistic\",\"p.value\"),drop=TRUE]       return(res)     }      lmResults <- t(       sapply(species,              FUN = function(x) {               species_relabs <- exprs_df[x,]                res <- compute_lm(species_relabs)               return(res)                         }))             n <- ncol(exprs_df)          #Compute effect size and respective standard error for each species in single     #dataset         #Compute effect size for each species in single dataset     R_List <- as.vector(sapply(lmResults[,\"statistic\"], function(x) R_fromlm(n, x)))        wald_list <- unname(unlist(lmResults[,\"p.value\"]))          #FDR-correction with Benjamini-Hochberg method for Wald p-values     final_df <- as.matrix(cbind(R_List,                                 wald_list,                                 p.adjust(wald_list,method = \"BH\")))          #Finalize results for the single dataset     colnames(final_df) <- c(paste0(dataset,\"_Correlation\"),                             paste0(dataset,\"_pvalue\"),                             paste0(dataset,\"_Qvalue\"))     #final_df <-na.omit(final_df)     rownames(final_df) <- species     return(final_df)        }      linear_models <- lapply(tse_datasets, singleDatasetAnalyze)     names(linear_models) <- tse_datasets          return(linear_models)  } runMetaanalysis <- function(R_vector, n) {   a <- meta::metacor(cor=R_vector,                      n=n,                      studlab=rownames(R_vector),                      method.tau=\"PM\",                      sm=\"ZCOR\")      final_vector <-c(a$TE.random,                    a$seTE.random,                    paste(a$lower.random,a$upper.random,sep=\";\"),                    a$zval.random,                    a$pval.random,                    a$tau2,                    a$I2)      names(final_vector) <- c(\"RE_Correlation\",\"SE_RE\",\"CI_RE\",\"Zscore\",\"p-value\",\"tau2\",\"I^2\")   return(final_vector) }"},{"path":"https://github.com/waldronlab/curatedMetagenomicAnalyses/articles/Age_metaanalysis_vignette.html","id":"application-of-the-described-procedure-in-the-meta-analysis-of-age-related-microbial-species","dir":"Articles","previous_headings":"Analysis of microbial species by a linear model and computation of an effect size for each species in each dataset","what":"Application of the described procedure in the meta-analysis of age-related microbial species","title":"Meta-analysis of age-related microbial species using cMD3.0","text":"","code":"#Computing Correlation (R) of species relative abundances with age for all datasets  Corr_list <- computeStandardizedMeanDifference(species_tse)     #Merging outputs of all datasets so to have a single dataframe with all the  #species found across the cohorts final_df <- Reduce(function(x, y) merge(x, y, all=TRUE),                     lapply(Corr_list, function(x) data.frame(x, rn = row.names(x))))  final_df <- final_df  %>% column_to_rownames(var=\"rn\")   #Dataframes with random effect and respective vector containing sample size of  #each dataset  d_matrix <- final_df %>%    select(contains(\"Correlation\")) d_matrix <- t(d_matrix)   n_vector <- as.data.frame(colData(species_tse)) %>%    group_by(study_name) %>%    summarize(N= n())   n_vector <- n_vector[match(str_replace(rownames(d_matrix), \"_Correlation\",\"\"),                            n_vector$study_name ),]$N  meta_analysis <- t(as.data.frame(apply(FUN=function(x) {runMetaanalysis(x,n_vector)},                                        MARGIN=2,                                        d_matrix)))    final_df <- cbind(final_df, meta_analysis) final_df$FDR_Qvalue <- p.adjust(final_df$`p-value`,method = \"BH\")"},{"path":"https://github.com/waldronlab/curatedMetagenomicAnalyses/articles/MLdatasets.html","id":"investigate-potential-response-variables","dir":"Articles","previous_headings":"","what":"Investigate potential response variables","title":"Create datasets for machine learning","text":"10 study conditions commonly found curatedMetagenomicData: number studies found : datasets six data types associated ; example:","code":"data(\"sampleMetadata\") availablediseases <- pull(sampleMetadata, study_condition) %>%   table() %>%   sort(decreasing = TRUE) availablediseases ## . ##                   control                       IBD                       T2D  ##                     15121                      2088                       882  ##                       CRC                       IGT            premature_born  ##                       701                       563                       448  ##                  melanoma                       CAD                      ACVD  ##                       315                       269                       214  ##                   adenoma                       FMT                 cirrhosis  ##                       209                       149                       132  ##                       STH                    otitis             schizophrenia  ##                       108                       107                       106  ##              hypertension                        AS                        HF  ##                        99                        97                        95  ##                       T1D           acute_diarrhoea          pre-hypertension  ##                        89                        56                        56  ##                       CDI                    ME/CFS                  migraine  ##                        53                        50                        49  ##                      STEC               fatty_liver                 psoriasis  ##                        42                        41                        41  ## carcinoma_surgery_history                        AD            cephalosporins  ##                        40                        38                        36  ##                        PD                    asthma             periodontitis  ##                        31                        24                        24  ##                       SRP          peri-implantitis                        BD  ##                        24                        23                        20  ##                 mucositis                bronchitis   TKI_dependent_diarrhoea  ##                        20                        18                        16  ##            respiratoryinf        metabolic_syndrome                     donor  ##                        13                        10                         9  ##            pyelonephritis infectiousgastroenteritis                      MDRB  ##                         6                         5                         5  ##                     fever                 pneumonia               tonsillitis  ##                         3                         3                         3  ##                     cough             pyelonefritis                   skininf  ##                         2                         2                         2  ##                stomatitis                  cystitis             salmonellosis  ##                         2                         1                         1  ##                    sepsis                   suspinf  ##                         1                         1 studies <- lapply(names(availablediseases), function(x){   filter(sampleMetadata, study_condition %in% x) %>%     pull(study_name) %>%     unique() }) names(studies) <- names(availablediseases) studies <- studies[-grep(\"control\", names(studies))] #get rid of controls studies <- studies[sapply(studies, length) > 1] #available in more than one study studies ## $IBD ## [1] \"HallAB_2017\"     \"HMP_2019_ibdmdb\" \"IaniroG_2022\"    \"IjazUZ_2017\"     ## [5] \"LiJ_2014\"        \"NielsenHB_2014\"  \"VilaAV_2018\"     ##  ## $T2D ## [1] \"HMP_2019_t2d\"           \"KarlssonFH_2013\"        \"LiJ_2014\"               ## [4] \"MetaCardis_2020_a\"      \"QinJ_2012\"              \"SankaranarayananK_2015\" ##  ## $CRC ##  [1] \"FengQ_2015\"      \"GuptaA_2019\"     \"HanniganGD_2017\" \"ThomasAM_2018a\"  ##  [5] \"ThomasAM_2018b\"  \"ThomasAM_2019_c\" \"VogtmannE_2016\"  \"WirbelJ_2018\"    ##  [9] \"YachidaS_2019\"   \"YuJ_2015\"        \"ZellerG_2014\"    ##  ## $IGT ## [1] \"HMP_2019_t2d\"      \"KarlssonFH_2013\"   \"MetaCardis_2020_a\" ##  ## $premature_born ## [1] \"BrooksB_2017\" \"OlmMR_2017\"   ##  ## $melanoma ## [1] \"FrankelAE_2017\"       \"GopalakrishnanV_2018\" \"LeeKA_2022\"           ## [4] \"MatsonV_2018\"         \"PetersBA_2019\"        \"WindTT_2020\"          ##  ## $adenoma ## [1] \"FengQ_2015\"      \"HanniganGD_2017\" \"ThomasAM_2018a\"  \"YachidaS_2019\"   ## [5] \"ZellerG_2014\"    ##  ## $FMT ## [1] \"IaniroG_2022\" \"LiSS_2016\"    ##  ## $cirrhosis ## [1] \"LoombaR_2017\" \"QinN_2014\"    ##  ## $STH ## [1] \"RosaBA_2018\"  \"RubelMA_2020\" ##  ## $schizophrenia ## [1] \"Castro-NallarE_2015\" \"ZhuF_2020\"           ##  ## $T1D ## [1] \"Heitz-BuschartA_2016\" \"KosticAD_2015\"        \"LiJ_2014\"             ##  ## $acute_diarrhoea ## [1] \"DavidLA_2015\" \"KieserS_2018\" ##  ## $CDI ## [1] \"IaniroG_2022\"  \"VincentC_2016\" curatedMetagenomicData(\"JieZ_2017.+\") ## 2021-03-31.JieZ_2017.gene_families ## 2021-03-31.JieZ_2017.marker_abundance ## 2021-03-31.JieZ_2017.marker_presence ## 2021-03-31.JieZ_2017.pathway_abundance ## 2021-03-31.JieZ_2017.pathway_coverage ## 2021-03-31.JieZ_2017.relative_abundance ## 2021-10-14.JieZ_2017.gene_families ## 2021-10-14.JieZ_2017.marker_abundance ## 2021-10-14.JieZ_2017.marker_presence ## 2021-10-14.JieZ_2017.pathway_abundance ## 2021-10-14.JieZ_2017.pathway_coverage ## 2021-10-14.JieZ_2017.relative_abundance"},{"path":"https://github.com/waldronlab/curatedMetagenomicAnalyses/articles/MLdatasets.html","id":"write-relative-abundance-datasets-to-disk","dir":"Articles","previous_headings":"","what":"Write relative abundance datasets to disk","title":"Create datasets for machine learning","text":"","code":"for (i in seq_along(studies)){   cond <- names(studies)[i]   se <-     curatedMetagenomicAnalyses::makeSEforCondition(cond, removestudies = \"HMP_2019_ibdmdb\", dataType = \"relative_abundance\")   print(paste(\"Next study condition:\", cond, \" /// Body site: \", unique(colData(se)$body_site)))   print(with(colData(se), table(study_name, study_condition)))   cat(\"\\n \\n\")   save(se, file = paste0(cond, \".rda\"))   flattext <- select(as.data.frame(colData(se)), c(\"study_name\", \"study_condition\", \"subject_id\"))   rownames(flattext) <- colData(se)$sample_id   flattext <- cbind(flattext, data.frame(t(assay(se))))   write.csv(flattext, file = paste0(cond, \".csv\"))   system(paste0(\"gzip \", cond, \".csv\")) } ## [1] \"Next study condition: IBD  /// Body site:  stool\" ##                 study_condition ## study_name       control IBD ##   HallAB_2017         74 185 ##   IaniroG_2022         3   3 ##   IjazUZ_2017         38  56 ##   LiJ_2014            10 140 ##   NielsenHB_2014     248 148 ##   VilaAV_2018          0 355 ##  ## ## [1] \"Next study condition: T2D  /// Body site:  stool\" ##                         study_condition ## study_name               control T2D ##   HMP_2019_t2d                46  11 ##   KarlssonFH_2013             43  53 ##   LiJ_2014                    10  79 ##   MetaCardis_2020_a          642 550 ##   QinJ_2012                  174 170 ##   SankaranarayananK_2015      18  19 ##  ## ## [1] \"Next study condition: CRC  /// Body site:  stool\" ##                  study_condition ## study_name        control CRC ##   FengQ_2015           61  46 ##   GuptaA_2019          30  30 ##   HanniganGD_2017      28  27 ##   ThomasAM_2018a       24  29 ##   ThomasAM_2018b       28  32 ##   ThomasAM_2019_c      40  40 ##   VogtmannE_2016       52  52 ##   WirbelJ_2018         65  60 ##   YachidaS_2019       251 258 ##   YuJ_2015             54  74 ##   ZellerG_2014         61  53 ##  ## ## [1] \"Next study condition: IGT  /// Body site:  stool\" ##                    study_condition ## study_name          control IGT ##   HMP_2019_t2d           46 239 ##   KarlssonFH_2013        43  49 ##   MetaCardis_2020_a     642 275 ##  ##   ## [1] \"Next study condition: premature_born  /// Body site:  stool\"      ## [2] \"Next study condition: premature_born  /// Body site:  oralcavity\" ## [3] \"Next study condition: premature_born  /// Body site:  skin\"       ##               study_condition ## study_name     control premature_born ##   BrooksB_2017       5            403 ##   OlmMR_2017         0             45 ##  ## ## [1] \"Next study condition: melanoma  /// Body site:  stool\" ##                       study_condition ## study_name             melanoma ##   FrankelAE_2017             39 ##   GopalakrishnanV_2018       25 ##   LeeKA_2022                165 ##   MatsonV_2018               39 ##   PetersBA_2019              27 ##   WindTT_2020                20 ##  ## ## [1] \"Next study condition: adenoma  /// Body site:  stool\" ##                  study_condition ## study_name        adenoma control ##   FengQ_2015           47      61 ##   HanniganGD_2017      26      28 ##   ThomasAM_2018a       27      24 ##   YachidaS_2019        67     251 ##   ZellerG_2014         42      61 ##  ## ## [1] \"Next study condition: FMT  /// Body site:  stool\" ##               study_condition ## study_name     control FMT ##   IaniroG_2022       3 109 ##   LiSS_2016          5  40 ##  ## ## [1] \"Next study condition: cirrhosis  /// Body site:  stool\" ##               study_condition ## study_name     cirrhosis control ##   LoombaR_2017         9      36 ##   QinN_2014          123     114 ##  ## ## [1] \"Next study condition: STH  /// Body site:  stool\" ##               study_condition ## study_name     control STH ##   RosaBA_2018        5  19 ##   RubelMA_2020      86  89 ##  ## ## [1] \"Next study condition: schizophrenia  /// Body site:  oralcavity\" ## [2] \"Next study condition: schizophrenia  /// Body site:  stool\"      ##                      study_condition ## study_name            control schizophrenia ##   Castro-NallarE_2015      16            16 ##   ZhuF_2020                81            90 ##  ## ## [1] \"Next study condition: T1D  /// Body site:  stool\" ##                       study_condition ## study_name             control T1D ##   Heitz-BuschartA_2016      26  27 ##   KosticAD_2015             89  31 ##   LiJ_2014                  10  31 ##  ## ## [1] \"Next study condition: acute_diarrhoea  /// Body site:  stool\" ##               study_condition ## study_name     acute_diarrhoea control ##   DavidLA_2015              38       9 ##   KieserS_2018              18       9 ##  ## ## [1] \"Next study condition: CDI  /// Body site:  stool\" ##                study_condition ## study_name      CDI control ##   IaniroG_2022   20       3 ##   VincentC_2016  33     196 ##  ##"},{"path":"https://github.com/waldronlab/curatedMetagenomicAnalyses/articles/MLdatasets.html","id":"direct-link-to-files","dir":"Articles","previous_headings":"","what":"Direct link to files","title":"Create datasets for machine learning","text":"Download .csv .rda files directly https://www.dropbox.com/sh/0t0nbhj9eqm3wkq/AACZIw42WA-uHjzo97bG5tE6a?dl=0","code":""},{"path":"https://github.com/waldronlab/curatedMetagenomicAnalyses/articles/NUI-Galway-Metagenomics-Workshop.html","id":"r-packages-for-this-tutorial","dir":"Articles","previous_headings":"","what":"R Packages for This Tutorial","title":"NUI Galway Metagenomics Workshop","text":"tutorial demonstrates basic usage curatedMetagenomicData, prerequisite steps analysis, estimation alpha diversity, analysis beta diversity, differential abundance analysis. make tables figures tutorial, number R packages required, follows. requisite R packages loaded basic working knowledge metagenomics analysis (covered workshop), ’re ready begin. Just one last note, code chunks messages suppressed; verbose output expected using R console.","code":"library(curatedMetagenomicData) library(dplyr) library(stringr) library(scater) library(snakecase) library(forcats) library(gtsummary) library(mia) library(ggplot2) library(ggsignif) library(hrbrthemes) library(vegan) library(uwot) library(ANCOMBC) library(tibble) library(tidyr) library(knitr) library(ggrepel)"},{"path":"https://github.com/waldronlab/curatedMetagenomicAnalyses/articles/NUI-Galway-Metagenomics-Workshop.html","id":"using-curatedmetagenomicdata","dir":"Articles","previous_headings":"","what":"Using curatedMetagenomicData","title":"NUI Galway Metagenomics Workshop","text":"First, let’s address curatedMetagenomicData R/Bioconductor package ; ’s brief description. curatedMetagenomicData package provides standardized, curated human microbiome data novel analyses. includes gene families, marker abundance, marker presence, pathway abundance, pathway coverage, relative abundance samples collected different body sites. bacterial, fungal, archaeal taxonomic abundances sample calculated MetaPhlAn3 metabolic functional potential calculated HUMAnN3. manually curated sample metadata standardized metagenomic data available (Tree)SummarizedExperiment objects. sure refer SummarizedExperiment TreeSummarizedExperiment vignettes data structures unclear. also reference website curatedMetagenomicData waldronlab.io/curatedMetagenomicData, need .","code":""},{"path":"https://github.com/waldronlab/curatedMetagenomicAnalyses/articles/NUI-Galway-Metagenomics-Workshop.html","id":"sample-metadata-exploration","dir":"Articles","previous_headings":"Using curatedMetagenomicData","what":"Sample Metadata Exploration","title":"NUI Galway Metagenomics Workshop","text":"metagenomic analysis uses curatedMetagenomicData likely begin exploration sample metadata (.e. sampleMetadata). sampleMetadata object data.frame package contains sample metadata manually curated humans every sample. give idea columns available, dplyr syntax used take random sampling 10 rows (slice_sample). , columns containing NA values removed, first 10 remaining columns selected. data.frame sorted alphabetically study_name prior returned.","code":"sampleMetadata |>   slice_sample(n = 10) |>   select(where(~ !any(is.na(.x)))) |>   select(1:10) |>   arrange(study_name) ##         study_name         sample_id        subject_id body_site ## 1    AsnicarF_2021      SAMEA7045315 predict1_MTG_0461     stool ## 2     BrooksB_2017      S2_011_011G1            S2_011     stool ## 3  HMP_2019_ibdmdb          CSM67UF5             C3011     stool ## 4  HMP_2019_ibdmdb          PSM6XBUO             P6010     stool ## 5        LiuW_2016        SRR3992974        SRR3992974     stool ## 6     MehtaRS_2018  SID50745639_SF07       SID50745639     stool ## 7        QinN_2014             LD-98             LD-98     stool ## 8      TettAJ_2016 SK_CT108OSR_t1M14    TettAJ_2016108      skin ## 9    VatanenT_2016            G78515           T012977     stool ## 10     ZeeviD_2015      PNP_Main_772      PNP_Main_772     stool ##    study_condition                     disease age_category country ## 1          control                     healthy        adult     GBR ## 2   premature_born              premature_born      newborn     USA ## 3              IBD                         IBD        adult     USA ## 4              IBD                         IBD        child     USA ## 5          control                     healthy        adult     MNG ## 6          control                     healthy        adult     USA ## 7        cirrhosis ascites;cirrhosis;hepatitis        adult     CHN ## 8        psoriasis                   psoriasis        adult     ITA ## 9          control                     healthy        child     EST ## 10         control                     healthy        adult     ISR ##    non_westernized sequencing_platform ## 1               no     IlluminaNovaSeq ## 2               no       IlluminaHiSeq ## 3               no       IlluminaHiSeq ## 4               no       IlluminaHiSeq ## 5               no       IlluminaHiSeq ## 6               no       IlluminaHiSeq ## 7               no       IlluminaHiSeq ## 8               no       IlluminaHiSeq ## 9               no       IlluminaHiSeq ## 10              no       IlluminaHiSeq"},{"path":"https://github.com/waldronlab/curatedMetagenomicAnalyses/articles/NUI-Galway-Metagenomics-Workshop.html","id":"finding-available-resources","dir":"Articles","previous_headings":"Using curatedMetagenomicData","what":"Finding Available Resources","title":"NUI Galway Metagenomics Workshop","text":"resources available curatedMetagenomicData organized study_name can discovered curatedMetagenomicData() function. provided string, return names available resources. study_name 6 data types (gene_families, marker_abundance, marker_presence, pathway_abundance, pathway_coverage, relative_abundance), follow study_name separated dot. date precedes study_name versioning, ’s unimportant . first argument passed curatedMetagenomicData(), pattern, actually regular expression. things like .+ (match character one times) work, names multiple resources returned match. , can see two AsnicarF resources relative_abundance data type.","code":"curatedMetagenomicData(\"AsnicarF\") ## 2021-03-31.AsnicarF_2017.gene_families ## 2021-03-31.AsnicarF_2017.marker_abundance ## 2021-03-31.AsnicarF_2017.marker_presence ## 2021-03-31.AsnicarF_2017.pathway_abundance ## 2021-03-31.AsnicarF_2017.pathway_coverage ## 2021-03-31.AsnicarF_2017.relative_abundance ## 2021-10-14.AsnicarF_2017.gene_families ## 2021-10-14.AsnicarF_2017.marker_abundance ## 2021-10-14.AsnicarF_2017.marker_presence ## 2021-10-14.AsnicarF_2017.pathway_abundance ## 2021-10-14.AsnicarF_2017.pathway_coverage ## 2021-10-14.AsnicarF_2017.relative_abundance ## 2021-03-31.AsnicarF_2021.gene_families ## 2021-03-31.AsnicarF_2021.marker_abundance ## 2021-03-31.AsnicarF_2021.marker_presence ## 2021-03-31.AsnicarF_2021.pathway_abundance ## 2021-03-31.AsnicarF_2021.pathway_coverage ## 2021-03-31.AsnicarF_2021.relative_abundance curatedMetagenomicData(\"AsnicarF.+.relative_abundance\") ## 2021-03-31.AsnicarF_2017.relative_abundance ## 2021-10-14.AsnicarF_2017.relative_abundance ## 2021-03-31.AsnicarF_2021.relative_abundance"},{"path":"https://github.com/waldronlab/curatedMetagenomicAnalyses/articles/NUI-Galway-Metagenomics-Workshop.html","id":"downloading-study-resources","dir":"Articles","previous_headings":"Using curatedMetagenomicData","what":"Downloading Study Resources","title":"NUI Galway Metagenomics Workshop","text":"clear examples , simply searching AsnicarF studies download curated metagenomic data. must provide another argument, dryrun = FALSE, curatedMetagenomicData() function. download matching resources ExperimentHub (load local cache). dryrun = FALSE, curatedMetagenomicData() always return list SummarizedExperiment /TreeSummarizedExperiment objects.","code":"curatedMetagenomicData(\"AsnicarF.+.relative_abundance\", dryrun = FALSE) ## $`2021-10-14.AsnicarF_2017.relative_abundance` ## class: TreeSummarizedExperiment  ## dim: 298 24  ## metadata(0): ## assays(1): relative_abundance ## rownames(298): ##   k__Bacteria|p__Proteobacteria|c__Gammaproteobacteria|o__Enterobacterales|f__Enterobacteriaceae|g__Escherichia|s__Escherichia_coli ##   k__Bacteria|p__Actinobacteria|c__Actinobacteria|o__Bifidobacteriales|f__Bifidobacteriaceae|g__Bifidobacterium|s__Bifidobacterium_bifidum ##   ... ##   k__Bacteria|p__Firmicutes|c__Bacilli|o__Lactobacillales|f__Streptococcaceae|g__Streptococcus|s__Streptococcus_gordonii ##   k__Bacteria|p__Firmicutes|c__Bacilli|o__Lactobacillales|f__Aerococcaceae|g__Abiotrophia|s__Abiotrophia_sp_HMSC24B09 ## rowData names(7): superkingdom phylum ... genus species ## colnames(24): MV_FEI1_t1Q14 MV_FEI2_t1Q14 ... MV_MIM5_t2M14 ##   MV_MIM5_t3F15 ## colData names(22): study_name subject_id ... pregnant lactating ## reducedDimNames(0): ## mainExpName: NULL ## altExpNames(0): ## rowLinks: a LinkDataFrame (298 rows) ## rowTree: 1 phylo tree(s) (10430 leaves) ## colLinks: NULL ## colTree: NULL ##  ## $`2021-03-31.AsnicarF_2021.relative_abundance` ## class: TreeSummarizedExperiment  ## dim: 639 1098  ## metadata(0): ## assays(1): relative_abundance ## rownames(639): ##   k__Bacteria|p__Bacteroidetes|c__Bacteroidia|o__Bacteroidales|f__Bacteroidaceae|g__Bacteroides|s__Bacteroides_vulgatus ##   k__Bacteria|p__Bacteroidetes|c__Bacteroidia|o__Bacteroidales|f__Bacteroidaceae|g__Bacteroides|s__Bacteroides_stercoris ##   ... ##   k__Bacteria|p__Synergistetes|c__Synergistia|o__Synergistales|f__Synergistaceae|g__Pyramidobacter|s__Pyramidobacter_sp_C12_8 ##   k__Bacteria|p__Actinobacteria|c__Actinobacteria|o__Micrococcales|f__Brevibacteriaceae|g__Brevibacterium|s__Brevibacterium_aurantiacum ## rowData names(7): superkingdom phylum ... genus species ## colnames(1098): SAMEA7041133 SAMEA7041134 ... SAMEA7045952 SAMEA7045953 ## colData names(24): study_name subject_id ... BMI family ## reducedDimNames(0): ## mainExpName: NULL ## altExpNames(0): ## rowLinks: a LinkDataFrame (639 rows) ## rowTree: 1 phylo tree(s) (10430 leaves) ## colLinks: NULL ## colTree: NULL"},{"path":"https://github.com/waldronlab/curatedMetagenomicAnalyses/articles/NUI-Galway-Metagenomics-Workshop.html","id":"merging-data-across-studies","dir":"Articles","previous_headings":"Using curatedMetagenomicData","what":"Merging Data Across Studies","title":"NUI Galway Metagenomics Workshop","text":"can useful list elements returned curatedMetagenomicData() merged single SummarizedExperiment TreeSummarizedExperiment object. accomplished using mergeData() function – simply pipe (|>) output curatedMetagenomicData() mergeData() single object returned.","code":"curatedMetagenomicData(\"AsnicarF.+.relative_abundance\", dryrun = FALSE) |>   mergeData() ## class: TreeSummarizedExperiment  ## dim: 680 1122  ## metadata(0): ## assays(1): relative_abundance ## rownames(680): ##   k__Bacteria|p__Proteobacteria|c__Gammaproteobacteria|o__Enterobacterales|f__Enterobacteriaceae|g__Escherichia|s__Escherichia_coli ##   k__Bacteria|p__Actinobacteria|c__Actinobacteria|o__Bifidobacteriales|f__Bifidobacteriaceae|g__Bifidobacterium|s__Bifidobacterium_bifidum ##   ... ##   k__Bacteria|p__Synergistetes|c__Synergistia|o__Synergistales|f__Synergistaceae|g__Pyramidobacter|s__Pyramidobacter_sp_C12_8 ##   k__Bacteria|p__Actinobacteria|c__Actinobacteria|o__Micrococcales|f__Brevibacteriaceae|g__Brevibacterium|s__Brevibacterium_aurantiacum ## rowData names(7): superkingdom phylum ... genus species ## colnames(1122): MV_FEI1_t1Q14 MV_FEI2_t1Q14 ... SAMEA7045952 ##   SAMEA7045953 ## colData names(26): study_name subject_id ... BMI family ## reducedDimNames(0): ## mainExpName: NULL ## altExpNames(0): ## rowLinks: a LinkDataFrame (680 rows) ## rowTree: 1 phylo tree(s) (10430 leaves) ## colLinks: NULL ## colTree: NULL"},{"path":"https://github.com/waldronlab/curatedMetagenomicAnalyses/articles/NUI-Galway-Metagenomics-Workshop.html","id":"returning-data-from-samples","dir":"Articles","previous_headings":"Using curatedMetagenomicData","what":"Returning Data from Samples","title":"NUI Galway Metagenomics Workshop","text":"just one function curatedMetagenomicData package know , returnSamples(). used want return samples across studies match certain set conditions. return specific set samples, first subset sampleMetadata data.frame include desired samples. example , stool (body_site == \"stool\") samples healthy (disease == \"healthy\") adults (age >= 18) living Ireland Italy (str_detect(country, \"IRL|ITA\")) included columns NA values dropped. sampleMetadata data.frame subset desired, piped returnSamples() function. can see , another argument, counts, yet mentioned. counts = TRUE, relative abundance proportions multiplied read depth rounded nearest integer prior returned – argument applies returnSamples() curatedMetagenomicData() requesting relative_abundance data type.","code":"countryData <-   filter(sampleMetadata, body_site == \"stool\") |>   filter(disease == \"healthy\") |>   filter(age >= 18) |>   filter(str_detect(country, \"IRL|ITA\")) |>   select(where(~ !all(is.na(.x)))) |>   returnSamples(\"relative_abundance\", counts = TRUE)"},{"path":"https://github.com/waldronlab/curatedMetagenomicAnalyses/articles/NUI-Galway-Metagenomics-Workshop.html","id":"getting-ready-for-analysis","dir":"Articles","previous_headings":"","what":"Getting Ready for Analysis","title":"NUI Galway Metagenomics Workshop","text":"First, look countryData object just created get better understanding contains. using rest tutorial. can seen , first assay TreeSummarizedExperiment named relative_abundance. usually little consequence, need rename assay counts transformation next step; setting assayNames follows. Next, use logNormCounts() scater package create second assay logcounts contains log-normalized species abundances. taking look , can see now two assays desired. diving analysis, create quick summary table understand metadata better prepared handle potential biases analysis. steps use dplyr syntax clean variables output summary table.","code":"countryData ## class: TreeSummarizedExperiment  ## dim: 906 281  ## metadata(0): ## assays(1): relative_abundance ## rownames(906): ##   k__Bacteria|p__Bacteroidetes|c__Bacteroidia|o__Bacteroidales|f__Prevotellaceae|g__Prevotella|s__Prevotella_copri ##   k__Bacteria|p__Actinobacteria|c__Actinobacteria|o__Bifidobacteriales|f__Bifidobacteriaceae|g__Bifidobacterium|s__Bifidobacterium_adolescentis ##   ... ##   k__Bacteria|p__Firmicutes|c__Clostridia|o__Clostridiales|f__Clostridiaceae|g__Clostridium|s__Clostridium_sp_D5 ##   k__Bacteria|p__Firmicutes|c__Bacilli|o__Lactobacillales|f__Lactobacillaceae|g__Lactobacillus|s__Lactobacillus_algidus ## rowData names(7): superkingdom phylum ... genus species ## colnames(281): SID01.BA.VG.2 SID01.BA.V_metag ... CRC_MR_SBJ83H_17 ##   CRC_MR_SBJ84H_17 ## colData names(35): study_name subject_id ... dyastolic_p systolic_p ## reducedDimNames(0): ## mainExpName: NULL ## altExpNames(0): ## rowLinks: a LinkDataFrame (906 rows) ## rowTree: 1 phylo tree(s) (10430 leaves) ## colLinks: NULL ## colTree: NULL assayNames(countryData) <-   \"counts\" countryData <-   logNormCounts(countryData) countryData ## class: TreeSummarizedExperiment  ## dim: 906 281  ## metadata(0): ## assays(2): counts logcounts ## rownames(906): ##   k__Bacteria|p__Bacteroidetes|c__Bacteroidia|o__Bacteroidales|f__Prevotellaceae|g__Prevotella|s__Prevotella_copri ##   k__Bacteria|p__Actinobacteria|c__Actinobacteria|o__Bifidobacteriales|f__Bifidobacteriaceae|g__Bifidobacterium|s__Bifidobacterium_adolescentis ##   ... ##   k__Bacteria|p__Firmicutes|c__Clostridia|o__Clostridiales|f__Clostridiaceae|g__Clostridium|s__Clostridium_sp_D5 ##   k__Bacteria|p__Firmicutes|c__Bacilli|o__Lactobacillales|f__Lactobacillaceae|g__Lactobacillus|s__Lactobacillus_algidus ## rowData names(7): superkingdom phylum ... genus species ## colnames(281): SID01.BA.VG.2 SID01.BA.V_metag ... CRC_MR_SBJ83H_17 ##   CRC_MR_SBJ84H_17 ## colData names(36): study_name subject_id ... systolic_p sizeFactor ## reducedDimNames(0): ## mainExpName: NULL ## altExpNames(0): ## rowLinks: a LinkDataFrame (906 rows) ## rowTree: 1 phylo tree(s) (10430 leaves) ## colLinks: NULL ## colTree: NULL colData(countryData) |>   as.data.frame() |>   select(study_name, age, gender, country, sequencing_platform, curator, diet) |>   mutate(gender = to_title_case(gender)) |>   mutate(gender = fct_explicit_na(gender)) |>   mutate(curator = str_replace_all(curator, \"_\", \" \")) |>   mutate(curator = str_replace_all(curator, \";\", \", \")) |>   mutate(diet = to_title_case(diet)) |>   mutate(diet = fct_explicit_na(diet)) |>   rename_with(to_title_case) |>   tbl_summary() ## Warning: There was 1 warning in `mutate()`. ## ℹ In argument: `gender = fct_explicit_na(gender)`. ## Caused by warning: ## ! `fct_explicit_na()` was deprecated in forcats 1.0.0. ## ℹ Please use `fct_na_value_to_level()` instead."},{"path":"https://github.com/waldronlab/curatedMetagenomicAnalyses/articles/NUI-Galway-Metagenomics-Workshop.html","id":"estimating-alpha-diversity","dir":"Articles","previous_headings":"","what":"Estimating Alpha Diversity","title":"NUI Galway Metagenomics Workshop","text":"Alpha diversity estimation seeks quantify variation within sample; Shannon index (H’) probably widely used measure. accounts richness (.e. many types bacteria present) evenness (.e. equal proportions types ); assessed using addAlpha() function mia package. , plotColData() function scater package used generate basic ggplot2 plot, stylized using ggsignif hrbrthemes packages. Alpha Diversity Country. Alpha Diversity stool samples healthy adults, measured Shannon index (H’), significantly (Pr(T<t)<0.001)(Pr(T < t) < 0.001) lower among Irish samples, compared Italian samples.","code":"countryData |>   addAlpha(abund_values = \"logcounts\", index = \"shannon\") |>   plotColData(x = \"country\", y = \"shannon\", colour_by = \"country\", shape_by = \"country\") +   geom_signif(comparisons = list(c(\"IRL\", \"ITA\")), test = \"t.test\", map_signif_level = TRUE) +   labs(     title = \"Alpha Diversity by Country, Shannon Index (H')\",     subtitle = \"Stool Samples of Healthy Adults\",     x = \"Country\",     y = \"Alpha Diversity (H')\"   ) +   guides(color = guide_none(), shape = guide_none()) +   theme_minimal()"},{"path":"https://github.com/waldronlab/curatedMetagenomicAnalyses/articles/NUI-Galway-Metagenomics-Workshop.html","id":"analysis-of-beta-diversity","dir":"Articles","previous_headings":"","what":"Analysis of Beta Diversity","title":"NUI Galway Metagenomics Workshop","text":"Beta diversity measurement sample variation usually qualitatively assessed using low-dimensional embedding; classically done metagenomics principal coordinates analysis (PCoA) Bray-Curtis dissimilarity.1 done using runMDS() function scater package vegdist function vegan package. plotReducedDim() function scater package used generate basic ggplot2 plot, styled . Beta Diversity Country, Bray-Curtis PCoA. first two principal coordinates demonstrate good seperation Irish Italian stool samples healthy adults, suggesting differences gut microbial composition two populations. address issue using principal coordinates analysis (PCoA) dissimilarity, beta diversity can assessed using UMAP (Uniform Manifold Approximation Projection) algorithm instead.2 runUMAP() function scater package used ; otherwise, syntax largely . Beta Diversity Country, UMAP Embedding. two-dimensional UMAP embedding demonstrates good seperation Irish Italian stool samples healthy adults, suggesting differences gut microbial composition two populations.","code":"countryData |>   runMDS(FUN = vegdist, method = \"bray\", exprs_values = \"logcounts\", name = \"BrayCurtis\") |>   plotReducedDim(\"BrayCurtis\", colour_by = \"country\", shape_by = \"country\", text_by = \"country\") +   labs(     title = \"Beta Diversity by Country, Bray-Curtis PCoA\",     subtitle = \"Stool Samples of Healthy Adults\",     x = \"PCo 1\",     y = \"PCo 2\"   ) +   guides(color = guide_none(), shape = guide_none()) +   theme_minimal() countryData |>   runUMAP(exprs_values = \"logcounts\", name = \"UMAP\") |>   plotReducedDim(\"UMAP\", colour_by = \"country\", shape_by = \"country\", text_by = \"country\") +   labs(     title = \"Beta Diversity by Country, UMAP Embedding\",     subtitle = \"Stool Samples of Healthy Adults\",     x = \"UMAP 1\",     y = \"UMAP 2\"   ) +   guides(color = guide_none(), shape = guide_none()) +   theme_minimal()"},{"path":"https://github.com/waldronlab/curatedMetagenomicAnalyses/articles/NUI-Galway-Metagenomics-Workshop.html","id":"modeling-bacteria-by-country","dir":"Articles","previous_headings":"","what":"Modeling Bacteria by Country","title":"NUI Galway Metagenomics Workshop","text":"beta diversity embeddings suggest features separate Irish Italian stool samples healthy adults, might like know differentially abundance. assess ANCOMBC package metagenomics-specific additive log-ratio model task. However, ancombc() function requires phyloseq class objects – one can created using makePhyloseqFromTreeSummarizedExperiment() function mia package, shown . results ANCOMBC model strange list structure coerced data.frame can displayed; bind_cols() function dplyr package used . row names results table big long strings microbial taxonomies need editing displayed nicely. rownames_to_column() function tibble package used turn column can edited. row names split 7 pieces, names columns piece assigned created . row names results table transformed using tidyr, dplyr, stringr, shown . results table good shape, can filtered include bacterial species exhibited large (e.g. abs(beta) > 1) significant (-log10(q_val) > 5) differences abundances two countries. example , table sorted effect size number formatting conventions applied displaying results table. table somewhat interesting, results better summarized volcano plot (.e. statistical significance versus fold change) one can made using results table. shorten labels readability, stringr first used abbreviate species names replacing first word name single letter followed period. Next, filtering table undertaken, color scheme used plots applied. labeling coloring applied effect size significance thresholds met, denoted dotted lines. Volcano Plot Differentially Abundance Bacterial Species. model figure, Irish samples reference group bacterial species blue left significantly abundant Irish samples yellow right significantly abundant Italian samples. bonus, Google PubMed search Holdemanella biformis see condition(s) associated explore differences two countries using GBD Compare visualizations.","code":"ancombcResults <-   mia::convertToPhyloseq(countryData) |>   ancombc(formula=\"country\", group=\"country\") # Extract the results for the country coefficient (countryITA) ancombcTable <- data.frame(   beta = ancombcResults$res$lfc$countryITA,   se = ancombcResults$res$se$countryITA,   p_val = ancombcResults$res$p_val$countryITA,   q_val = ancombcResults$res$q_val$countryITA,   row.names = rownames(ancombcResults$feature_table) ) ancombcTable <- rownames_to_column(ancombcTable) rankNames <-   c(\"Kingdom\", \"Phylum\", \"Class\", \"Order\", \"Family\", \"Genus\", \"Species\") ancombcTable[[\"rowname\"]] <-   separate(ancombcTable, rowname, rankNames, sep = \"\\\\|\") |>   select(all_of(rankNames)) |>   mutate(across(everything(), ~ str_remove_all(.x, \".__\"))) |>   mutate(across(everything(), ~ str_replace_all(.x, \"_\", \" \"))) |>   mutate(label = Species) |>   pull(label) filter(ancombcTable, abs(beta) > 1) |>   filter(-log10(q_val) > 5) |>   select(rowname, beta, se, p_val, q_val) |>   arrange(-abs(beta)) |>   column_to_rownames() |>   mutate(across(everything(), .fns = ~ round(.x, digits = 3))) |>   mutate(beta = format(beta)) |>   mutate(beta = str_replace(beta, \" \", \"&nbsp;\")) |>   mutate(p_val = if_else(p_val == 0, \"< 0.001\", format(p_val, nsmall = 3))) |>   mutate(q_val = if_else(q_val == 0, \"< 0.001\", format(q_val, nsmall = 3))) |>   kable(col.names = c(\"β\", \"SE\", \"P\", \"Q\"), align = \"cccc\", escape = FALSE) ancombcTable |>   mutate(rowname = str_replace(rowname, \"^([A-Z])([a-z])+ \", \"\\\\1. \")) |>   mutate(q_val = -log10(q_val)) |>   mutate(label = if_else(abs(beta) > 1, rowname, NA_character_)) |>   mutate(label = if_else(q_val > 5, label, NA_character_)) |>   mutate(color = if_else(beta > 0, \"#FF9E4A\", \"#729ECE\")) |>   mutate(color = if_else(is.na(label), \"#000000\", color)) |>   ggplot(mapping = aes(beta, q_val, color = I(color), label = label, shape = I(1))) +   geom_point() +   geom_hline(linetype = \"dotted\", yintercept = 5) +   geom_vline(linetype = \"dotted\", xintercept = 1) +   geom_vline(linetype = \"dotted\", xintercept = -1) +   geom_label_repel(min.segment.length = 0, force = 10, max.overlaps = 20, na.rm = TRUE) +   labs(     title = \"Significance vs. Effect Size, ANCOM-BC\",     subtitle = \"Stool Samples of Healthy Adults\",     x = expression(beta),     y = expression(-~log[10]~Q)   ) +   guides(color = guide_none(), shape = guide_none()) +   theme_minimal()"},{"path":"https://github.com/waldronlab/curatedMetagenomicAnalyses/articles/Sex_metaanalysis_vignette.html","id":"meta-analysis-of-sex-related-microbial-species-using-data-from-curatedmetagenomicdata","dir":"Articles","previous_headings":"","what":"Meta-analysis of sex-related microbial species using data from curatedMetagenomicData","title":"Meta-analysis of sex-related microbial species using cMD 3","text":"","code":"library(curatedMetagenomicData) library(tidyverse) library(SummarizedExperiment) library(TreeSummarizedExperiment)"},{"path":"https://github.com/waldronlab/curatedMetagenomicAnalyses/articles/Sex_metaanalysis_vignette.html","id":"retrieval-of-datasets-from-the-cmd3-meeting-a-series-of-requirements","dir":"Articles","previous_headings":"Meta-analysis of sex-related microbial species using data from curatedMetagenomicData","what":"Retrieval of datasets from the cMD3 meeting a series of requirements","title":"Meta-analysis of sex-related microbial species using cMD 3","text":"","code":"#Filter on Age, body_site, study_condition and remove samples missing BMI metadata <- curatedMetagenomicData::sampleMetadata %>%    filter(age >= 16 &            body_site == \"stool\" &            study_condition == \"control\" &             is.na(BMI) != TRUE &            is.na(gender) != TRUE &            days_from_first_collection %in% c(0,NA))  metadata <- metadata %>%    group_by(study_name, subject_id) %>%    filter(row_number() == 1) %>%    ungroup()     #Apply function to grouped selected dataset datasets_tokeep <- metadata %>%     select(study_name, gender) %>%     group_by(study_name) %>%      summarise(n_males = sum(gender==\"male\"),                n_females= sum(gender==\"female\"),                N=n()) %>%       mutate(keep = (pmin(n_males,n_females) >= 40) & (n_females/N >= 0.25) & (n_males/N >= 0.25)) %>%      filter(keep == TRUE)  datasets_tokeep <- datasets_tokeep$study_name    metadata <- metadata %>%      filter(study_name %in% datasets_tokeep)"},{"path":"https://github.com/waldronlab/curatedMetagenomicAnalyses/articles/Sex_metaanalysis_vignette.html","id":"download-of-datasets-and-data-wrangling-to-structure-them-in-a-format-suitable-for-this-meta-analysis","dir":"Articles","previous_headings":"Meta-analysis of sex-related microbial species using data from curatedMetagenomicData","what":"Download of datasets and data wrangling to structure them in a format suitable for this meta-analysis","title":"Meta-analysis of sex-related microbial species using cMD 3","text":"Now filtered metadata, apply cMD function “returnSamples()”. function allows us obtain TreeSummarizedExperiment object, stored specified data-type (example: relative abundances species) samples selected metadata. proceeding, split datasets country: analysis, AsnicarF_2021 dataset encompasses samples 2 countries, divide GBR- USA-samples (renaming last: USA_asnicar_2021). TreeSummarizedExperiment object taxonomic relative abundances stores entire taxonomy (Kingdom species-level) microbial species. therefore use function splitByRanks mia package allows us select higher taxonomic level. focus Species. interested species , modify TSE object accordingly","code":"#Retrieve queried samples tse <- curatedMetagenomicData::returnSamples(metadata, dataType = \"relative_abundance\")  #Separating Asnicar USA from Asnicar GBR colData(tse)[which(colData(tse)$study_name == \"AsnicarF_2021\" & colData(tse)$country == \"USA\"),]$study_name <- \"USA_asnicarF_2021\" library(mia) species_tse <- splitByRanks(tse, rank = \"species\")[[1]]"},{"path":[]},{"path":"https://github.com/waldronlab/curatedMetagenomicAnalyses/articles/Sex_metaanalysis_vignette.html","id":"defining-functions-used-to-perform-the-analysis","dir":"Articles","previous_headings":"Single-dataset sex-related microbial species differential-abundance-analyses, via a linear modelling controlling for age & BMI","what":"Defining functions used to perform the analysis","title":"Meta-analysis of sex-related microbial species using cMD 3","text":"functions used compute standardized difference (d) t-value linear models, respective Standard Error (SEdSE_d) transform relative abundance data. define another function transform data arcsin(RelAb100)arcsin(\\sqrt{\\frac{RelAb}{100}}) corresponding proportions. order proceed meta-analysis, compute effect-size population. dataset effect-size computed function define . function estimates per-feature relationship sex (encoded binary variable) arcsin-square-root relative abundance species. estimates extracted Ordinary Least Squares (OLS) model, microbial feature (case, species) response, sex predictor. Using method can control model age & BMI patient. model indeed shape: species∼sex+age+BMI species \\sim  sex + age + BMI Weighted effect-size sex model computed : effect-size=t⋅(n1+n2)n1⋅n2⋅df\\text{effect-size} = \\frac{t\\cdot (n1+n2)}{\\sqrt{n1\\cdot n2}\\cdot \\sqrt{df}} : n1n1 total number controls (females) corresponding dataset n2n2 total number cases (males) corresponding dataset dfdf degrees freedom, computed df=n1+n2−2df=n1 + n2 - 2 degrees freedom linear model built tt T-statistics sex returned software computed Effect-size (corrected covariates) Standard Error Variance: SE=n1+n2−1n1+n2−3⋅4n1+n2⋅(1+effect-size28)SE =\\sqrt{\\frac{n1+n2-1}{n1+n2-3}\\cdot\\frac{4}{n1+n2}\\cdot(1+\\frac{\\text{effect-size}^2}{8})} Now computed effect-sizes population, can meta-analyze microbial feature. order , define function applying metagen function package metafor.","code":"#Compute Standardized Difference (d) from t-value d_fromlm <- function(n1,n2,t) {   d <- (t*(n1+n2)/(sqrt(n1*n2)*sqrt(n1+n2-2)))   return(d) }  #Compute Std. error of d SE_d <- function(n1,n2,d) {   se_d <- sqrt(((n1+n2-1)/(n1+n2-3))*((4/(n1+n2))*(1+((d**2)/8))))   return(se_d) } #Transform relative abundances asin_trans <- function(rel_ab){   return(asin(sqrt(rel_ab/100))) } #Function that takes in input a tse object and for each dataset computes a linear model for each linear species computeStandardizedMeanDifference <- function(tse_object){      tse_datasets <- unique(colData(tse_object)$study_name)      #Build linear models for all species of each dataset present in tse_object   singleDatasetAnalyze <- function(dataset) {          single_dataset_tse <- tse_object[,tse_object$study_name == dataset]      #Select vectors of relative abundances and metadata     exprs_df <- asin_trans(       assay(single_dataset_tse))          exprs_df <- exprs_df[rowSums(is.na(exprs_df)) != ncol(exprs_df), ]      species <- rownames(exprs_df)          age <- colData(single_dataset_tse)$age     bmi <- colData(single_dataset_tse)$BMI     gender <- as.factor(colData(single_dataset_tse)$gender)          compute_lm <- function(exprs_row){       lm_res <-  broom::tidy(lm(exprs_row ~ bmi + age + gender))       lm_res <- column_to_rownames(lm_res, var = \"term\")       res <- lm_res[\"gendermale\",c(\"statistic\",\"p.value\"),drop=TRUE]       return(res)     }      lmResults <- t(       sapply(species,              FUN = function(x) {               species_relabs <- exprs_df[x,]                res <- compute_lm(species_relabs)               return(res)                         }))      n_gender <- c(table(gender)[\"male\"][[1]],                   table(gender)[\"female\"][[1]])          #Compute effect size and respective standard error for each species     #in single dataset          d_List <- as.vector(sapply(lmResults[,\"statistic\"], function(x) d_fromlm(n_gender[1],                                                                    n_gender[2],                                                                     x)))          SE_d_List <- as.vector(sapply(d_List, function(x) SE_d(n_gender[1],                                                            n_gender[2],                                                            x )))          #Wald test for relative abundance of species between males and females     #(default of lm() function)     wald_list <- as.double(lmResults[,\"p.value\", drop=TRUE])          #FDR-correction with Benjamini-Hochberg method for Wald p-values     q_values <- p.adjust(wald_list,method = \"BH\")               final_df <- as.matrix(cbind(d_List,                                 SE_d_List,                                 wald_list,                                 q_values))          #Finalize results for the single dataset     colnames(final_df) <- c(paste0(dataset,\"_CohenD\"),                             paste0(dataset,\"_SE_d\"),                             paste0(dataset,\"_pvalue\"),                             paste0(dataset,\"_Qvalue\"))          rownames(final_df) <- species      return(final_df)      }        linear_models <- lapply(tse_datasets, singleDatasetAnalyze)     names(linear_models) <- tse_datasets          return(linear_models)  } runMetaanalysis <- function(d_vector, SE_d_vector) {   a <- meta::metagen(TE=d_vector,                      seTE=SE_d_vector,                      studlab=rownames(d_vector),                      method.tau=\"PM\",                                sm=\"SMD\")      final_vector <-c(a$TE.random,                    a$seTE.random,                    paste(a$lower.random,a$upper.random,sep=\";\"),                    a$zval.random,                    a$pval.random,                    a$tau2,                    a$I2)      names(final_vector) <- c(\"RE\",\"SE_RE\",\"CI_RE\",\"Zscore\",\"p-value\",\"tau2\",\"I^2\")   return(final_vector) }"},{"path":"https://github.com/waldronlab/curatedMetagenomicAnalyses/articles/Sex_metaanalysis_vignette.html","id":"application-of-the-described-procedure-in-the-meta-analysis-of-sex-related-microbial-species","dir":"Articles","previous_headings":"Single-dataset sex-related microbial species differential-abundance-analyses, via a linear modelling controlling for age & BMI","what":"Application of the described procedure in the meta-analysis of sex-related microbial species","title":"Meta-analysis of sex-related microbial species using cMD 3","text":"","code":"#Computing Standardized Mean Differences (d), and the respective standard error #(SE_D) of species relative abundances between males and female for all datasets  SDM <- computeStandardizedMeanDifference(species_tse)    #Merging outputs of all datasets so to have a single dataframe with all the  #species found across the cohorts final_df <- Reduce(function(x, y) merge(x, y, all=TRUE),                     lapply(SDM, function(x) data.frame(x, rn = row.names(x))))  final_df <- final_df  %>% column_to_rownames(var=\"rn\")  #Subsetting from SDM dataframe only the columns we actually need to perform  #the meta-analysis into two separated dataframes (one for the standardized mean #differences (d), and one for the respective standard error (SE_D)  d_matrix <- final_df %>%    select(contains(\"CohenD\")) d_matrix <- t(d_matrix) se_matrix <- final_df %>%    select(contains(\"SE_d\")) se_matrix <- t(se_matrix)  #Run meta-analyses meta_analysis_regression <- t(mapply(function(x,y) {runMetaanalysis(x,y)},                                                    as.data.frame(d_matrix),                                                    as.data.frame(se_matrix)))   final_df <- cbind(final_df, meta_analysis_regression)  #Correct p-values of random effect with FDR Benjamini-Hochberg final_df$FDR_Qvalue <- p.adjust(final_df$`p-value`,method = \"BH\")"},{"path":"https://github.com/waldronlab/curatedMetagenomicAnalyses/articles/explorecirrhosis.html","id":"cirrhosis-exploratory-analysis","dir":"Articles","previous_headings":"","what":"Cirrhosis exploratory analysis","title":"Exploration of the liver cirrhosis dataset","text":"seems strong correlation study condition current antibiotics use, raising questions causality direction predictions:","code":"se <-     curatedMetagenomicAnalyses::makeSEforCondition(\"cirrhosis\", removestudies = \"HMP_2019_ibdmdb\", dataType = \"relative_abundance\") ##  ## $`2021-10-14.LoombaR_2017.relative_abundance` ## dropping rows without rowTree matches: ##   k__Bacteria|p__Actinobacteria|c__Coriobacteriia|o__Coriobacteriales|f__Coriobacteriaceae|g__Collinsella|s__Collinsella_stercoris ##   k__Bacteria|p__Firmicutes|c__Bacilli|o__Bacillales|f__Bacillales_unclassified|g__Gemella|s__Gemella_bergeri ##   k__Bacteria|p__Firmicutes|c__Bacilli|o__Lactobacillales|f__Carnobacteriaceae|g__Granulicatella|s__Granulicatella_elegans ##   k__Bacteria|p__Firmicutes|c__Erysipelotrichia|o__Erysipelotrichales|f__Erysipelotrichaceae|g__Bulleidia|s__Bulleidia_extructa ##   k__Bacteria|p__Proteobacteria|c__Betaproteobacteria|o__Burkholderiales|f__Sutterellaceae|g__Sutterella|s__Sutterella_parvirubra ##   k__Bacteria|p__Synergistetes|c__Synergistia|o__Synergistales|f__Synergistaceae|g__Cloacibacillus|s__Cloacibacillus_evryensis ## $`2021-03-31.QinN_2014.relative_abundance` ## dropping rows without rowTree matches: ##   k__Bacteria|p__Actinobacteria|c__Coriobacteriia|o__Coriobacteriales|f__Atopobiaceae|g__Olsenella|s__Olsenella_profusa ##   k__Bacteria|p__Actinobacteria|c__Coriobacteriia|o__Coriobacteriales|f__Coriobacteriaceae|g__Collinsella|s__Collinsella_stercoris ##   k__Bacteria|p__Actinobacteria|c__Coriobacteriia|o__Coriobacteriales|f__Coriobacteriaceae|g__Enorma|s__[Collinsella]_massiliensis ##   k__Bacteria|p__Firmicutes|c__Bacilli|o__Bacillales|f__Bacillales_unclassified|g__Gemella|s__Gemella_bergeri ##   k__Bacteria|p__Firmicutes|c__Bacilli|o__Lactobacillales|f__Carnobacteriaceae|g__Granulicatella|s__Granulicatella_elegans ##   k__Bacteria|p__Firmicutes|c__Clostridia|o__Clostridiales|f__Ruminococcaceae|g__Ruminococcus|s__Ruminococcus_champanellensis ##   k__Bacteria|p__Firmicutes|c__Erysipelotrichia|o__Erysipelotrichales|f__Erysipelotrichaceae|g__Bulleidia|s__Bulleidia_extructa ##   k__Bacteria|p__Proteobacteria|c__Betaproteobacteria|o__Burkholderiales|f__Sutterellaceae|g__Sutterella|s__Sutterella_parvirubra ##   k__Bacteria|p__Synergistetes|c__Synergistia|o__Synergistales|f__Synergistaceae|g__Cloacibacillus|s__Cloacibacillus_evryensis library(table1) ##  ## Attaching package: 'table1' ## The following objects are masked from 'package:base': ##  ##     units, units<- df = data.frame(colData(se)[, 1:10]) table1::label(df$study_name) <- \"Study Name\" table1::label(df$body_site) <- \"Body site\" table1::label(df$study_condition) <- \"Study condition\" table1::label(df$antibiotics_current_use) <- \"Current Antibiotics Use\" units(df$age) <- \"Years\" table1(~ . -  subject_id | study_name, data = df) table(df$study_condition, df$antibiotics_current_use) ##             ##              no ##   cirrhosis 123 ##   control   114"},{"path":"https://github.com/waldronlab/curatedMetagenomicAnalyses/articles/explorecirrhosis.html","id":"compositionality","dir":"Articles","previous_headings":"","what":"Compositionality","title":"Exploration of the liver cirrhosis dataset","text":"Many, , columns add 100%: observation minimum sum relative abundances : Note, result species phylogenetic information unavailable building TreeSummarizedExperiment. possible take data directly ExperimentHub avoid data loss, data loss rare small probably unimportant purposes.","code":"summary(colSums(assay(se))) ##    Min. 1st Qu.  Median    Mean 3rd Qu.    Max.  ##   97.04   99.98  100.00   99.92  100.00  100.00 colData(se)[which.min(colSums(assay(se))), ] ## DataFrame with 1 row and 31 columns ##       study_name  subject_id   body_site antibiotics_current_use ##      <character> <character> <character>             <character> ## LV-1   QinN_2014        LV-1       stool                      no ##      study_condition             disease       age age_category      gender ##          <character>         <character> <integer>  <character> <character> ## LV-1       cirrhosis cirrhosis;hepatitis        42        adult        male ##          country non_westernized sequencing_platform DNA_extraction_kit ##      <character>     <character>         <character>        <character> ## LV-1         CHN              no       IlluminaHiSeq                 NA ##             PMID number_reads number_bases minimum_read_length ##      <character>    <integer>    <numeric>           <integer> ## LV-1    25079328     34522116   3452211600                 100 ##      median_read_length      NCBI_accession      curator       BMI ##               <integer>         <character>  <character> <numeric> ## LV-1                100 ERR528291;ERR528292 Paolo_Manghi     19.03 ##      disease_subtype antibiotics_family  creatine  albumine     alcohol ##          <character>        <character> <numeric> <numeric> <character> ## LV-1   HBV;cirrhosis                 NA        65      31.2         yes ##      disease_stage bilirubin prothrombin_time       inr       ctp ##        <character> <numeric>        <numeric> <numeric> <integer> ## LV-1            NA      1.82               NA      1.18         6"},{"path":"https://github.com/waldronlab/curatedMetagenomicAnalyses/articles/explorecirrhosis.html","id":"siamcat-analysis","dir":"Articles","previous_headings":"","what":"SIAMCAT analysis","title":"Exploration of the liver cirrhosis dataset","text":"SIAMCAT vignette. Unsupervised filtering:","code":"if(!requireNamespace(\"SIAMCAT\"))   BiocManager::install(\"SIAMCAT\") library(SIAMCAT) labs <-   create.label(meta = data.frame(colData(se)),                label = 'study_condition',                case = 'cirrhosis') ## Label used as case: ##    cirrhosis ## Label used as control: ##    control ## + finished create.label.from.metadata in 0.022 s sc.obj <- siamcat(feat=assay(se)/100,     label=labs,     meta=data.frame(colData(se))) ## + starting validate.data ## +++ checking overlap between labels and features ## + Keeping labels of 282 sample(s). ## +++ checking sample number per class ## +++ checking overlap between samples and metadata ## + finished validate.data in 0.025 s show(sc.obj) ## siamcat-class object ## label()                Label object:         150 control and 132 cirrhosis samples ##  ## contains phyloseq-class experiment-level object @phyloseq: ## phyloseq@otu_table()   OTU Table:            [ 697 taxa and 282 samples ] ## phyloseq@sam_data()    Sample Data:          [ 282 samples by 31 sample variables ] sc.obj <- filter.features(sc.obj,     filter.method = 'abundance',     cutoff = 0.001) ## Features successfully filtered"},{"path":"https://github.com/waldronlab/curatedMetagenomicAnalyses/articles/explorecirrhosis.html","id":"association-testing","dir":"Articles","previous_headings":"SIAMCAT analysis","what":"Association testing","title":"Exploration of the liver cirrhosis dataset","text":"","code":"sc.obj <- check.associations(     sc.obj,     alpha = 0.05,     mult.corr = \"fdr\" )  sc.obj <- association.plot(sc.obj,     sort.by = 'fc',     plot.type = \"quantile.box\",     panels = c(\"fc\", \"prevalence\", \"auroc\") ) ## ### ATTENTION: Not plotting to a pdf-file. ## ### The plot is optimized for landscape DIN-A4 (or similar) layout. ## ### Please make sure that your plotting region is large enough!!! ## ### Use at your own risk... ## Are you sure that you want to continue? (Yes/no/cancel)"},{"path":"https://github.com/waldronlab/curatedMetagenomicAnalyses/articles/identify_CRC_species.html","id":"overview","dir":"Articles","previous_headings":"","what":"Overview","title":"List all species present in colorectal cancer datasets","text":"analysis: selects subset samples (CRC-related example), uses table1 package display table characteristics included cohort, sorts species order descending prevalence, uses DT package datatable function display searchable, paged table prevalences, writes prevalences file. Required packages:","code":"suppressPackageStartupMessages({   library(table1)   library(DT)   library(curatedMetagenomicData)   library(dplyr) })"},{"path":"https://github.com/waldronlab/curatedMetagenomicAnalyses/articles/identify_CRC_species.html","id":"select-samples","dir":"Articles","previous_headings":"","what":"Select samples","title":"List all species present in colorectal cancer datasets","text":"Note species without phylogenetic information lost.","code":"crc_subset <- filter(sampleMetadata, study_condition == \"CRC\") %>%   returnSamples(dataType = \"relative_abundance\",                 rownames = \"short\")"},{"path":"https://github.com/waldronlab/curatedMetagenomicAnalyses/articles/identify_CRC_species.html","id":"cohort-characteristics","dir":"Articles","previous_headings":"","what":"Cohort characteristics","title":"List all species present in colorectal cancer datasets","text":"Create summary table participants cohort:","code":"table1::table1( ~ disease + disease_subtype + age + gender + country + study_name,                 data = colData(crc_subset))"},{"path":"https://github.com/waldronlab/curatedMetagenomicAnalyses/articles/identify_CRC_species.html","id":"show-species-in-order-of-decreasing-prevalence","dir":"Articles","previous_headings":"","what":"Show species in order of decreasing prevalence","title":"List all species present in colorectal cancer datasets","text":"Prevalences shown fraction specimens CRC patients non-zero relative abundance. Write disk: Download zipped prevalences file produced curatedMetagenomicData version 3.2.3: prevalences.csv.zip","code":"prevalences <- rowSums(assay(crc_subset) > 0) / ncol(crc_subset)  prevalences <- tibble(species = names(prevalences), prevalence = signif(prevalences, 2)) %>%   filter(prevalence > 0) %>%   arrange(-prevalence) DT::datatable(prevalences) write.csv(prevalences, row.names = FALSE, file = \"prevalences.csv\")"},{"path":"https://github.com/waldronlab/curatedMetagenomicAnalyses/articles/identify_CRC_species.html","id":"session-info","dir":"Articles","previous_headings":"","what":"Session Info","title":"List all species present in colorectal cancer datasets","text":"","code":"sessioninfo::session_info() ## ─ Session info ─────────────────────────────────────────────────────────────── ##  setting  value ##  version  R version 4.5.1 (2025-06-13) ##  os       Ubuntu 24.04.2 LTS ##  system   x86_64, linux-gnu ##  ui       X11 ##  language en ##  collate  en_US.UTF-8 ##  ctype    en_US.UTF-8 ##  tz       UTC ##  date     2025-08-28 ##  pandoc   3.7.0.2 @ /usr/bin/ (via rmarkdown) ##  quarto   1.6.42 @ /usr/local/bin/quarto ##  ## ─ Packages ─────────────────────────────────────────────────────────────────── ##  package                  * version date (UTC) lib source ##  abind                      1.4-8   2024-09-12 [1] RSPM (R 4.5.0) ##  AnnotationDbi              1.70.0  2025-04-15 [1] Bioconductor 3.21 (R 4.5.0) ##  AnnotationHub              3.16.1  2025-07-23 [1] Bioconductor 3.21 (R 4.5.1) ##  ape                        5.8-1   2024-12-16 [1] RSPM (R 4.5.0) ##  beachmat                   2.24.0  2025-04-15 [1] Bioconductor 3.21 (R 4.5.0) ##  beeswarm                   0.4.0   2021-06-01 [1] RSPM (R 4.5.0) ##  Biobase                  * 2.68.0  2025-04-15 [1] Bioconductor 3.21 (R 4.5.0) ##  BiocBaseUtils              1.10.0  2025-04-15 [1] Bioconductor 3.21 (R 4.5.0) ##  BiocFileCache              2.16.1  2025-07-23 [1] Bioconductor 3.21 (R 4.5.1) ##  BiocGenerics             * 0.54.0  2025-04-15 [1] Bioconductor 3.21 (R 4.5.0) ##  BiocManager                1.30.26 2025-06-05 [2] CRAN (R 4.5.1) ##  BiocNeighbors              2.2.0   2025-04-15 [1] Bioconductor 3.21 (R 4.5.0) ##  BiocParallel               1.42.1  2025-06-01 [1] Bioconductor 3.21 (R 4.5.1) ##  BiocSingular               1.24.0  2025-04-15 [1] Bioconductor 3.21 (R 4.5.0) ##  BiocStyle                * 2.36.0  2025-04-15 [1] Bioconductor 3.21 (R 4.5.0) ##  BiocVersion                3.21.1  2024-10-29 [2] Bioconductor 3.21 (R 4.5.1) ##  Biostrings               * 2.76.0  2025-04-15 [1] Bioconductor 3.21 (R 4.5.0) ##  bit                        4.6.0   2025-03-06 [1] RSPM (R 4.5.0) ##  bit64                      4.6.0-1 2025-01-16 [1] RSPM (R 4.5.0) ##  blob                       1.2.4   2023-03-17 [1] RSPM (R 4.5.0) ##  bluster                    1.18.0  2025-04-15 [1] Bioconductor 3.21 (R 4.5.0) ##  bookdown                   0.44    2025-08-21 [1] RSPM (R 4.5.0) ##  bslib                      0.9.0   2025-01-30 [2] RSPM (R 4.5.0) ##  cachem                     1.1.0   2024-05-16 [2] RSPM (R 4.5.0) ##  cellranger                 1.1.0   2016-07-27 [1] RSPM (R 4.5.0) ##  cli                        3.6.5   2025-04-23 [2] RSPM (R 4.5.0) ##  cluster                    2.1.8.1 2025-03-12 [3] CRAN (R 4.5.1) ##  codetools                  0.2-20  2024-03-31 [3] CRAN (R 4.5.1) ##  crayon                     1.5.3   2024-06-20 [2] RSPM (R 4.5.0) ##  crosstalk                  1.2.2   2025-08-26 [1] RSPM (R 4.5.0) ##  curatedMetagenomicData   * 3.16.1  2025-04-22 [1] Bioconductor 3.21 (R 4.5.0) ##  curl                       7.0.0   2025-08-19 [2] RSPM (R 4.5.0) ##  DBI                        1.2.3   2024-06-02 [1] RSPM (R 4.5.0) ##  dbplyr                     2.5.0   2024-03-19 [1] RSPM (R 4.5.0) ##  DECIPHER                   3.4.0   2025-04-15 [1] Bioconductor 3.21 (R 4.5.0) ##  decontam                   1.28.0  2025-04-15 [1] Bioconductor 3.21 (R 4.5.0) ##  DelayedArray               0.34.1  2025-04-17 [1] Bioconductor 3.21 (R 4.5.0) ##  DelayedMatrixStats         1.30.0  2025-04-15 [1] Bioconductor 3.21 (R 4.5.0) ##  desc                       1.4.3   2023-12-10 [2] RSPM (R 4.5.0) ##  digest                     0.6.37  2024-08-19 [2] RSPM (R 4.5.0) ##  DirichletMultinomial       1.50.0  2025-04-15 [1] Bioconductor 3.21 (R 4.5.0) ##  dplyr                    * 1.1.4   2023-11-17 [1] RSPM (R 4.5.0) ##  DT                       * 0.33    2024-04-04 [1] RSPM (R 4.5.0) ##  emmeans                    1.11.2  2025-07-11 [1] RSPM (R 4.5.0) ##  estimability               1.5.1   2024-05-12 [1] RSPM (R 4.5.0) ##  evaluate                   1.0.4   2025-06-18 [2] RSPM (R 4.5.0) ##  ExperimentHub              2.16.1  2025-07-23 [1] Bioconductor 3.21 (R 4.5.1) ##  farver                     2.1.2   2024-05-13 [1] RSPM (R 4.5.0) ##  fastmap                    1.2.0   2024-05-15 [2] RSPM (R 4.5.0) ##  filelock                   1.0.3   2023-12-11 [1] RSPM (R 4.5.0) ##  fillpattern                1.0.2   2024-06-24 [1] RSPM (R 4.5.0) ##  Formula                    1.2-5   2023-02-24 [1] RSPM (R 4.5.0) ##  fs                         1.6.6   2025-04-12 [2] RSPM (R 4.5.0) ##  generics                 * 0.1.4   2025-05-09 [1] RSPM (R 4.5.0) ##  GenomeInfoDb             * 1.44.2  2025-08-20 [1] Bioconductor 3.21 (R 4.5.1) ##  GenomeInfoDbData           1.2.14  2025-05-24 [1] Bioconductor ##  GenomicRanges            * 1.60.0  2025-04-15 [1] Bioconductor 3.21 (R 4.5.0) ##  ggbeeswarm                 0.7.2   2023-04-29 [1] RSPM (R 4.5.0) ##  ggnewscale                 0.5.2   2025-06-20 [1] RSPM (R 4.5.0) ##  ggplot2                    3.5.2   2025-04-09 [1] RSPM (R 4.5.0) ##  ggrepel                    0.9.6   2024-09-07 [1] RSPM (R 4.5.0) ##  ggtext                     0.1.2   2022-09-16 [1] RSPM (R 4.5.0) ##  glue                       1.8.0   2024-09-30 [2] RSPM (R 4.5.0) ##  gridExtra                  2.3     2017-09-09 [1] RSPM (R 4.5.0) ##  gridtext                   0.1.5   2022-09-16 [1] RSPM (R 4.5.0) ##  gtable                     0.3.6   2024-10-25 [1] RSPM (R 4.5.0) ##  hms                        1.1.3   2023-03-21 [1] RSPM (R 4.5.0) ##  htmltools                  0.5.8.1 2024-04-04 [2] RSPM (R 4.5.0) ##  htmlwidgets                1.6.4   2023-12-06 [2] RSPM (R 4.5.0) ##  httr                       1.4.7   2023-08-15 [1] RSPM (R 4.5.0) ##  igraph                     2.1.4   2025-01-23 [1] RSPM (R 4.5.0) ##  IRanges                  * 2.42.0  2025-04-15 [1] Bioconductor 3.21 (R 4.5.0) ##  irlba                      2.3.5.1 2022-10-03 [1] RSPM (R 4.5.0) ##  jquerylib                  0.1.4   2021-04-26 [2] RSPM (R 4.5.0) ##  jsonlite                   2.0.0   2025-03-27 [2] RSPM (R 4.5.0) ##  KEGGREST                   1.48.1  2025-06-22 [1] Bioconductor 3.21 (R 4.5.1) ##  knitr                      1.50    2025-03-16 [2] RSPM (R 4.5.0) ##  lattice                    0.22-7  2025-04-02 [3] CRAN (R 4.5.1) ##  lazyeval                   0.2.2   2019-03-15 [1] RSPM (R 4.5.0) ##  lifecycle                  1.0.4   2023-11-07 [2] RSPM (R 4.5.0) ##  magrittr                   2.0.3   2022-03-30 [2] RSPM (R 4.5.0) ##  MASS                       7.3-65  2025-02-28 [3] CRAN (R 4.5.1) ##  Matrix                     1.7-3   2025-03-11 [3] CRAN (R 4.5.1) ##  MatrixGenerics           * 1.20.0  2025-04-15 [1] Bioconductor 3.21 (R 4.5.0) ##  matrixStats              * 1.5.0   2025-01-07 [1] RSPM (R 4.5.0) ##  memoise                    2.0.1   2021-11-26 [2] RSPM (R 4.5.0) ##  mgcv                       1.9-3   2025-04-04 [3] CRAN (R 4.5.1) ##  mia                        1.16.1  2025-07-13 [1] Bioconductor 3.21 (R 4.5.1) ##  mime                       0.13    2025-03-17 [2] RSPM (R 4.5.0) ##  multcomp                   1.4-28  2025-01-29 [1] RSPM (R 4.5.0) ##  MultiAssayExperiment       1.34.0  2025-04-15 [1] Bioconductor 3.21 (R 4.5.0) ##  mvtnorm                    1.3-3   2025-01-10 [1] RSPM (R 4.5.0) ##  nlme                       3.1-168 2025-03-31 [3] CRAN (R 4.5.1) ##  parallelly                 1.45.1  2025-07-24 [1] RSPM (R 4.5.0) ##  patchwork                  1.3.2   2025-08-25 [1] RSPM (R 4.5.0) ##  permute                    0.9-8   2025-06-25 [1] RSPM (R 4.5.0) ##  pillar                     1.11.0  2025-07-04 [2] RSPM (R 4.5.0) ##  pkgconfig                  2.0.3   2019-09-22 [2] RSPM (R 4.5.0) ##  pkgdown                    2.1.3   2025-05-25 [2] RSPM (R 4.5.0) ##  plyr                       1.8.9   2023-10-02 [1] RSPM (R 4.5.0) ##  png                        0.1-8   2022-11-29 [1] RSPM (R 4.5.0) ##  purrr                      1.1.0   2025-07-10 [2] RSPM (R 4.5.0) ##  R6                         2.6.1   2025-02-15 [2] RSPM (R 4.5.0) ##  ragg                       1.4.0   2025-04-10 [2] RSPM (R 4.5.0) ##  rappdirs                   0.3.3   2021-01-31 [2] RSPM (R 4.5.0) ##  rbiom                      2.2.1   2025-06-27 [1] RSPM (R 4.5.0) ##  RColorBrewer               1.1-3   2022-04-03 [1] RSPM (R 4.5.0) ##  Rcpp                       1.1.0   2025-07-02 [2] RSPM (R 4.5.0) ##  readr                      2.1.5   2024-01-10 [1] RSPM (R 4.5.0) ##  readxl                     1.4.5   2025-03-07 [1] RSPM (R 4.5.0) ##  reshape2                   1.4.4   2020-04-09 [1] RSPM (R 4.5.0) ##  rlang                      1.1.6   2025-04-11 [2] RSPM (R 4.5.0) ##  rmarkdown                  2.29    2024-11-04 [2] RSPM (R 4.5.0) ##  RSQLite                    2.4.3   2025-08-20 [1] RSPM (R 4.5.0) ##  rsvd                       1.0.5   2021-04-16 [1] RSPM (R 4.5.0) ##  S4Arrays                   1.8.1   2025-06-01 [1] Bioconductor 3.21 (R 4.5.1) ##  S4Vectors                * 0.46.0  2025-04-15 [1] Bioconductor 3.21 (R 4.5.0) ##  sandwich                   3.1-1   2024-09-15 [1] RSPM (R 4.5.0) ##  sass                       0.4.10  2025-04-11 [2] RSPM (R 4.5.0) ##  ScaledMatrix               1.16.0  2025-04-15 [1] Bioconductor 3.21 (R 4.5.0) ##  scales                     1.4.0   2025-04-24 [1] RSPM (R 4.5.0) ##  scater                     1.36.0  2025-04-15 [1] Bioconductor 3.21 (R 4.5.0) ##  scuttle                    1.18.0  2025-04-15 [1] Bioconductor 3.21 (R 4.5.0) ##  sessioninfo                1.2.3   2025-02-05 [2] RSPM (R 4.5.0) ##  SingleCellExperiment     * 1.30.1  2025-05-07 [1] Bioconductor 3.21 (R 4.5.0) ##  slam                       0.1-55  2024-11-13 [1] RSPM (R 4.5.0) ##  SparseArray                1.8.1   2025-07-23 [1] Bioconductor 3.21 (R 4.5.1) ##  sparseMatrixStats          1.20.0  2025-04-15 [1] Bioconductor 3.21 (R 4.5.0) ##  stringi                    1.8.7   2025-03-27 [2] RSPM (R 4.5.0) ##  stringr                    1.5.1   2023-11-14 [2] RSPM (R 4.5.0) ##  SummarizedExperiment     * 1.38.1  2025-04-30 [1] Bioconductor 3.21 (R 4.5.0) ##  survival                   3.8-3   2024-12-17 [3] CRAN (R 4.5.1) ##  systemfonts                1.2.3   2025-04-30 [2] RSPM (R 4.5.0) ##  table1                   * 1.4.3   2023-01-06 [1] RSPM (R 4.5.0) ##  textshaping                1.0.1   2025-05-01 [2] RSPM (R 4.5.0) ##  TH.data                    1.1-3   2025-01-17 [1] RSPM (R 4.5.0) ##  tibble                     3.3.0   2025-06-08 [2] RSPM (R 4.5.0) ##  tidyr                      1.3.1   2024-01-24 [1] RSPM (R 4.5.0) ##  tidyselect                 1.2.1   2024-03-11 [1] RSPM (R 4.5.0) ##  tidytree                   0.4.6   2023-12-12 [1] RSPM (R 4.5.0) ##  treeio                     1.32.0  2025-04-15 [1] Bioconductor 3.21 (R 4.5.0) ##  TreeSummarizedExperiment * 2.16.1  2025-05-11 [1] Bioconductor 3.21 (R 4.5.0) ##  tzdb                       0.5.0   2025-03-15 [1] RSPM (R 4.5.0) ##  UCSC.utils                 1.4.0   2025-04-15 [1] Bioconductor 3.21 (R 4.5.0) ##  vctrs                      0.6.5   2023-12-01 [2] RSPM (R 4.5.0) ##  vegan                      2.7-1   2025-06-05 [1] RSPM (R 4.5.0) ##  vipor                      0.4.7   2023-12-18 [1] RSPM (R 4.5.0) ##  viridis                    0.6.5   2024-01-29 [1] RSPM (R 4.5.0) ##  viridisLite                0.4.2   2023-05-02 [1] RSPM (R 4.5.0) ##  withr                      3.0.2   2024-10-28 [2] RSPM (R 4.5.0) ##  xfun                       0.53    2025-08-19 [2] RSPM (R 4.5.0) ##  xml2                       1.4.0   2025-08-20 [2] RSPM (R 4.5.0) ##  xtable                     1.8-4   2019-04-21 [2] RSPM (R 4.5.0) ##  XVector                  * 0.48.0  2025-04-15 [1] Bioconductor 3.21 (R 4.5.0) ##  yaml                       2.3.10  2024-07-26 [2] RSPM (R 4.5.0) ##  yulab.utils                0.2.1   2025-08-19 [1] RSPM (R 4.5.0) ##  zoo                        1.8-14  2025-04-10 [1] RSPM (R 4.5.0) ##  ##  [1] /__w/_temp/Library ##  [2] /usr/local/lib/R/site-library ##  [3] /usr/local/lib/R/library ##  * ── Packages attached to the search path. ##  ## ──────────────────────────────────────────────────────────────────────────────"},{"path":"https://github.com/waldronlab/curatedMetagenomicAnalyses/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Levi Waldron. Author. Paolo Manghi. Author. Davide Galzato. Author. Lucas Schiffer. Author. Jennifer Wokaty. Contributor, maintainer.","code":""},{"path":"https://github.com/waldronlab/curatedMetagenomicAnalyses/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Name (2025). Curated Metagenomic Analyses. https://github.com/waldronlab/curatedMetagenomicAnalyses/curatedMetagenomicAnalyses - R package version 0.4.0, waldronlab.io/curatedMetagenomicAnalyses. waldronlab (2025). “Curated Metagenomic Analyses.” bioRxiv. doi:10.1101/TODO, https://www.biorxiv.org/content/10.1101/TODO.","code":"@Manual{,   title = {Curated Metagenomic Analyses},   author = {Author Name},   year = {2025},   url = {waldronlab.io/curatedMetagenomicAnalyses},   note = {https://github.com/waldronlab/curatedMetagenomicAnalyses/curatedMetagenomicAnalyses - R package version 0.4.0}, } @Article{,   title = {Curated Metagenomic Analyses},   author = {{waldronlab}},   year = {2025},   journal = {bioRxiv},   doi = {10.1101/TODO},   url = {https://www.biorxiv.org/content/10.1101/TODO}, }"},{"path":"https://github.com/waldronlab/curatedMetagenomicAnalyses/index.html","id":"curatedmetagenomicdataanalyses","dir":"","previous_headings":"","what":"Analyses using curatedMetagenomicData","title":"Analyses using curatedMetagenomicData","text":"repository provides biologically relevant analyses using curatedMetagenomicData package, using R/Bioconductor using Python. can run R Python analyses locally provided Docker container, Cloud free.","code":""},{"path":[]},{"path":"https://github.com/waldronlab/curatedMetagenomicAnalyses/index.html","id":"requirements","dir":"","previous_headings":"Running locally using Docker","what":"Requirements","title":"Analyses using curatedMetagenomicData","text":"need Docker.","code":""},{"path":"https://github.com/waldronlab/curatedMetagenomicAnalyses/index.html","id":"getting-started","dir":"","previous_headings":"Running locally using Docker","what":"Getting Started","title":"Analyses using curatedMetagenomicData","text":"First build image: run container based image password: Visit localhost/lab browser.","code":"docker pull \"waldronlab/curatedmetagenomicanalyses\" docker run -d -p 80:8888 --name cma \\   waldronlab/curatedmetagenomicanalyses"},{"path":"https://github.com/waldronlab/curatedMetagenomicAnalyses/index.html","id":"running-locally-without-docker","dir":"","previous_headings":"","what":"Running locally without Docker","title":"Analyses using curatedMetagenomicData","text":"Start installation current version Bioconductor (see https://bioconductor.org/install/). Older versions probably work. Installation directly GitHub requires first installing remotes package, :","code":"BiocManager::install(\"waldronlab/curatedMetagenomicDataAnalyses\", dependencies = TRUE)"},{"path":[]},{"path":"https://github.com/waldronlab/curatedMetagenomicAnalyses/index.html","id":"r-vignettes","dir":"","previous_headings":"Analyses","what":"R Vignettes","title":"Analyses using curatedMetagenomicData","text":"Create datasets machine learning Exploration liver cirrhosis dataset Select colorectal cancer patients create cohort table, calculate prevalence species found stool microbiomes create dynamic searchable html table Meta-analysis age-related microbial species using cMD3 Meta-analysis sex-related microbial species using cMD3 NUI Galway Metagenomics Workshop","code":""},{"path":"https://github.com/waldronlab/curatedMetagenomicAnalyses/index.html","id":"python-notebooks","dir":"","previous_headings":"Analyses","what":"Python Notebooks","title":"Analyses using curatedMetagenomicData","text":"Sex-related differences human microbiome using cMD3 Python3","code":""},{"path":"https://github.com/waldronlab/curatedMetagenomicAnalyses/index.html","id":"supplementary-materials","dir":"","previous_headings":"Analyses","what":"Supplementary Materials","title":"Analyses using curatedMetagenomicData","text":"Installing Python dependencies Linux (Python notebook)","code":""},{"path":"https://github.com/waldronlab/curatedMetagenomicAnalyses/reference/dataDump.html","id":null,"dir":"Reference","previous_headings":"","what":"Dump all of curatedMetagenomicData as two .csv files — dataDump","title":"Dump all of curatedMetagenomicData as two .csv files — dataDump","text":"Dump curatedMetagenomicData two .csv files","code":""},{"path":"https://github.com/waldronlab/curatedMetagenomicAnalyses/reference/dataDump.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Dump all of curatedMetagenomicData as two .csv files — dataDump","text":"","code":"dataDump(dataType = \"relative_abundance\", counts = FALSE)"},{"path":"https://github.com/waldronlab/curatedMetagenomicAnalyses/reference/dataDump.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Dump all of curatedMetagenomicData as two .csv files — dataDump","text":"dataType (default: \"relative_abundance\") Data type, passed returnSamples. counts (Default: FALSE) Whether convert count-like data multiplying read depth. Passed returnSamples.","code":""},{"path":"https://github.com/waldronlab/curatedMetagenomicAnalyses/reference/dataDump.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Dump all of curatedMetagenomicData as two .csv files — dataDump","text":"SummarizedExperiment TreeSummarizedExperiment containing cMD data type requested. Calling function side-effect also writing two csv files, one assay data object one colData.","code":""},{"path":"https://github.com/waldronlab/curatedMetagenomicAnalyses/reference/dataDump.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Dump all of curatedMetagenomicData as two .csv files — dataDump","text":"function also removes control samples NielsenHB_2014 study, duplicated LeChatelierE_2013 study. cMD version number put filename.","code":""},{"path":"https://github.com/waldronlab/curatedMetagenomicAnalyses/reference/dataDump.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Dump all of curatedMetagenomicData as two .csv files — dataDump","text":"","code":"if (FALSE) { # \\dontrun{    tse <- dataDump()    tse    dir(pattern = \"\\\\.csv\") } # }"},{"path":"https://github.com/waldronlab/curatedMetagenomicAnalyses/reference/filter_sort.html","id":null,"dir":"Reference","previous_headings":"","what":"Filter and Sort Features in Meta-analysis final data-frame — filter_sort","title":"Filter and Sort Features in Meta-analysis final data-frame — filter_sort","text":"function allows removal dataframe meta-analysis results features Standardized Mean Difference computed least user-specified number cohorts (na_filter).","code":""},{"path":"https://github.com/waldronlab/curatedMetagenomicAnalyses/reference/filter_sort.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Filter and Sort Features in Meta-analysis final data-frame — filter_sort","text":"","code":"filter_sort(df_to_sort, na_filter)"},{"path":"https://github.com/waldronlab/curatedMetagenomicAnalyses/reference/filter_sort.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Filter and Sort Features in Meta-analysis final data-frame — filter_sort","text":"df_to_sort dataframe containing meta-analysis results (final_df vignette). na_filter Maximum number cohorts SDM difference computed allow feature included.","code":""},{"path":"https://github.com/waldronlab/curatedMetagenomicAnalyses/reference/filter_sort.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Filter and Sort Features in Meta-analysis final data-frame — filter_sort","text":"dataframe meta-analysis results, filtered prevalent features ordered adj.p-value effect size.","code":""},{"path":"https://github.com/waldronlab/curatedMetagenomicAnalyses/reference/filter_sort.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Filter and Sort Features in Meta-analysis final data-frame — filter_sort","text":"Additionally, function orders increasing order features according corrected p-values decreasing order Overall effect size","code":""},{"path":"https://github.com/waldronlab/curatedMetagenomicAnalyses/reference/makeSEforCondition.html","id":null,"dir":"Reference","previous_headings":"","what":"Make a dataset for a condition of interest. — makeSEforCondition","title":"Make a dataset for a condition of interest. — makeSEforCondition","text":"Make dataset condition interest.","code":""},{"path":"https://github.com/waldronlab/curatedMetagenomicAnalyses/reference/makeSEforCondition.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Make a dataset for a condition of interest. — makeSEforCondition","text":"","code":"makeSEforCondition(   condition,   removestudies = NULL,   dataType = \"relative_abundance\",   counts = FALSE )"},{"path":"https://github.com/waldronlab/curatedMetagenomicAnalyses/reference/makeSEforCondition.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Make a dataset for a condition of interest. — makeSEforCondition","text":"condition Condition study build case-control dataset. See \"study_condition\" column sampleMetadata object. removestudies studies included (default: NULL) dataType Type metagenomic data return, see ?curatedMetagenomicData counts Convert something resembling counts, multiplying read depth?","code":""},{"path":"https://github.com/waldronlab/curatedMetagenomicAnalyses/reference/makeSEforCondition.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Make a dataset for a condition of interest. — makeSEforCondition","text":"(Tree)SummarizedExperiment containing merged data 1+ studies","code":""},{"path":"https://github.com/waldronlab/curatedMetagenomicAnalyses/reference/makeSEforCondition.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Make a dataset for a condition of interest. — makeSEforCondition","text":"function finds datasets contain condition interest, returns datasets, filters contain samples condition controls. datasets merged single (Tree)SummarizedExperiment. Controls datasets included.","code":""},{"path":"https://github.com/waldronlab/curatedMetagenomicAnalyses/reference/makeSEforCondition.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Make a dataset for a condition of interest. — makeSEforCondition","text":"","code":"makeSEforCondition(\"STH\") #>  #> $`2021-10-14.RosaBA_2018.relative_abundance` #> dropping rows without rowTree matches: #>   k__Bacteria|p__Actinobacteria|c__Coriobacteriia|o__Coriobacteriales|f__Atopobiaceae|g__Olsenella|s__Olsenella_profusa #>   k__Bacteria|p__Actinobacteria|c__Coriobacteriia|o__Coriobacteriales|f__Coriobacteriaceae|g__Collinsella|s__Collinsella_stercoris #>   k__Bacteria|p__Firmicutes|c__Bacilli|o__Bacillales|f__Bacillales_unclassified|g__Gemella|s__Gemella_bergeri #>   k__Bacteria|p__Firmicutes|c__Bacilli|o__Lactobacillales|f__Carnobacteriaceae|g__Granulicatella|s__Granulicatella_elegans #>   k__Bacteria|p__Firmicutes|c__Erysipelotrichia|o__Erysipelotrichales|f__Erysipelotrichaceae|g__Bulleidia|s__Bulleidia_extructa #>   k__Bacteria|p__Proteobacteria|c__Betaproteobacteria|o__Burkholderiales|f__Sutterellaceae|g__Sutterella|s__Sutterella_parvirubra #> $`2021-10-14.RubelMA_2020.relative_abundance` #> dropping rows without rowTree matches: #>   k__Bacteria|p__Actinobacteria|c__Coriobacteriia|o__Coriobacteriales|f__Coriobacteriaceae|g__Collinsella|s__Collinsella_stercoris #>   k__Bacteria|p__Firmicutes|c__Clostridia|o__Clostridiales|f__Ruminococcaceae|g__Ruminococcus|s__Ruminococcus_champanellensis #>   k__Bacteria|p__Proteobacteria|c__Betaproteobacteria|o__Burkholderiales|f__Sutterellaceae|g__Sutterella|s__Sutterella_parvirubra #> class: TreeSummarizedExperiment  #> dim: 496 199  #> metadata(0): #> assays(1): relative_abundance #> rownames(496): #>   k__Bacteria|p__Actinobacteria|c__Actinobacteria|o__Bifidobacteriales|f__Bifidobacteriaceae|g__Bifidobacterium|s__Bifidobacterium_adolescentis #>   k__Bacteria|p__Firmicutes|c__Clostridia|o__Clostridiales|f__Lachnospiraceae|g__Roseburia|s__Roseburia_faecis #>   ... #>   k__Bacteria|p__Bacteroidetes|c__Bacteroidia|o__Bacteroidales|f__Porphyromonadaceae|g__Porphyromonas|s__Porphyromonas_gingivalis #>   k__Bacteria|p__Proteobacteria|c__Gammaproteobacteria|o__Enterobacterales|f__Morganellaceae|g__Morganella|s__Morganella_morganii #> rowData names(7): superkingdom phylum ... genus species #> colnames(199): U_VS-3059-508 U_VS-1592-367 ... CM.94_WGS CM.97_WGS #> colData names(27): study_name subject_id ... lifestyle #>   uncurated_metadata #> reducedDimNames(0): #> mainExpName: NULL #> altExpNames(0): #> rowLinks: a LinkDataFrame (496 rows) #> rowTree: 1 phylo tree(s) (10430 leaves) #> colLinks: NULL #> colTree: NULL"},{"path":"https://github.com/waldronlab/curatedMetagenomicAnalyses/reference/runMetaanalysis_categorical.html","id":null,"dir":"Reference","previous_headings":"","what":"Single Species Meta-analysis (Categorical Variables) — runMetaanalysis_categorical","title":"Single Species Meta-analysis (Categorical Variables) — runMetaanalysis_categorical","text":"Wrapping function perform meta-analysis using function metagen package meta single Species. -study variance computed Paule-Mandel estimator (method.tau = PM). summary measure Standardize Mean Difference (sm = SMD)","code":""},{"path":"https://github.com/waldronlab/curatedMetagenomicAnalyses/reference/runMetaanalysis_categorical.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Single Species Meta-analysis (Categorical Variables) — runMetaanalysis_categorical","text":"","code":"runMetaanalysis_categorical(d_vector, SE_d_vector)"},{"path":"https://github.com/waldronlab/curatedMetagenomicAnalyses/reference/runMetaanalysis_categorical.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Single Species Meta-analysis (Categorical Variables) — runMetaanalysis_categorical","text":"d_vector vector multiple standardized mean differences single feature (Species) across datasets. SE_d_vector vector matching Standard Errors Standardized Mean Differences d_vector","code":""},{"path":"https://github.com/waldronlab/curatedMetagenomicAnalyses/reference/runMetaanalysis_categorical.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Single Species Meta-analysis (Categorical Variables) — runMetaanalysis_categorical","text":"named vector results meta-analysis feature implicitly described d_vector SE_d_vector. RE\",\"SE_RE\",\"CI_RE\",\"Zscore\",\"p-value\",\"tau2\",\"^2\"","code":""},{"path":"https://github.com/waldronlab/curatedMetagenomicAnalyses/reference/runMetaanalysis_quantitative.html","id":null,"dir":"Reference","previous_headings":"","what":"Single Species Meta-analysis (Quantitative Variables) — runMetaanalysis_quantitative","title":"Single Species Meta-analysis (Quantitative Variables) — runMetaanalysis_quantitative","text":"Wrapping function perform meta-analysis using function metagen package meta single Species. -study variance computed Paule-Mandel estimator (method.tau = PM). summary measure Standardize Mean Difference (sm = ZCOR)","code":""},{"path":"https://github.com/waldronlab/curatedMetagenomicAnalyses/reference/runMetaanalysis_quantitative.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Single Species Meta-analysis (Quantitative Variables) — runMetaanalysis_quantitative","text":"","code":"runMetaanalysis_quantitative(R_vector, n)"},{"path":"https://github.com/waldronlab/curatedMetagenomicAnalyses/reference/runMetaanalysis_quantitative.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Single Species Meta-analysis (Quantitative Variables) — runMetaanalysis_quantitative","text":"R_vector vector correlations single feature (Species) across datasets. n vector number samples cohort","code":""},{"path":"https://github.com/waldronlab/curatedMetagenomicAnalyses/reference/runMetaanalysis_quantitative.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Single Species Meta-analysis (Quantitative Variables) — runMetaanalysis_quantitative","text":"named vector results meta-analysis feature implicitly described d_vector SE_d_vector. RE_Correlation\",\"SE_RE\",\"CI_RE\",\"Zscore\",\"p-value\",\"tau2\",\"^2\"","code":""}]
